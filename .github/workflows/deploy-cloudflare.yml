name: Deploy Cloudflare stack

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  pages:
    if: ${{ secrets.CLOUDFLARE_API_TOKEN != '' && secrets.CLOUDFLARE_ACCOUNT_ID != '' && secrets.CLOUDFLARE_PAGES_PROJECT != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PAGES_PROJECT }}
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  worker:
    needs: pages
    if: ${{ needs.pages.result == 'success' && secrets.CLOUDFLARE_API_TOKEN != '' && secrets.CLOUDFLARE_ACCOUNT_ID != '' && secrets.WORKER_API_BASE_URL != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worker/package-lock.json

      - name: Install Worker dependencies
        working-directory: worker
        run: npm ci

      - name: Deploy Worker
        uses: cloudflare/wrangler-action@3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: worker
          command: >-
            deploy --env production --var API_BASE_URL:${{ secrets.WORKER_API_BASE_URL }}
            ${{ secrets.VECTOR_DB_URL != '' && format('--var VECTOR_DB_URL:{0}', secrets.VECTOR_DB_URL) || '' }}
